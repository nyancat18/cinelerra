# system tests


include global_config

DIRS := \
	doc \
	libzmpeg3 \
	db \
	mpeg2enc \
	mplexlo \
	guicast \
	cinelerra \
	plugins \
	po


DISTNAME = bcast2000demo.tar
SOURCENAME = heroinesrc.tar
DISTOBJS = \
	$(INSTDIR)/bcast/bcast2000 \
	$(INSTDIR)/plugins/*.plugin
MJPEGDIR := $(shell expr thirdparty/mjpegtools* )
MJPEGPATH := $(shell cd $(MJPEGDIR); pwd)
MJPEGINC := $(MJPEGPATH)/usr/local/include/mjpegtools
# a bunch of header file fixups
MJPEGFIXS := editlist/lav_io.h lav_io/quicktime.h lav_io/yuv4mpeg.h
MJPEGFIXS += liblavrec/mjpeg_types.h mjpeg_logging/mjpeg_types.h
MJPEGFIXS += motionsearch/mjpeg_types.h mpegconsts/yuv4mpeg.h
MJPEGFIXS += yuv4mpeg/mjpeg_types.h yuv4mpeg/mjpeg_types.h

 
all: $(OBJDIR)/soundtest
	mkdir -p bin
	$(MAKE) -C $(MJPEGDIR) install-data DESTDIR=$(MJPEGPATH)
	for ff in $(MJPEGFIXS); do \
		f=`basename $$ff`; fn=$(MJPEGINC)/`dirname $$ff`.h; \
		sed -e "s/#include[ ]*<$$f>/#include \"$$f\"/" -i $$fn; \
	done
	$(MAKE) -C $(MJPEGDIR)/utils 
	$(MAKE) -C $(MJPEGDIR)/mpeg2enc 
	$(MAKE) -C $(MJPEGDIR)/mplex
	$(MAKE) -C quicktime
	$(MAKE) -f build/Makefile.toolame
	$(MAKE) -f build/Makefile.uuid
ifeq ($(STATIC_LIBRARIES), y)
	$(MAKE) -f build/Makefile.sndfile
	$(MAKE) -f build/Makefile.gif
	$(MAKE) -f build/Makefile.exr
	$(MAKE) -f build/Makefile.esound
#	$(MAKE) -f build/Makefile.freetype
	$(MAKE) -f build/Makefile.tiff
	$(MAKE) -f build/Makefile.toolame
ifeq ($(HAVE_FIREWIRE), y)
	$(MAKE) -C thirdparty/libraw1394*
	$(MAKE) -C thirdparty/libiec61883*
	$(MAKE) -C thirdparty/libavc1394*
endif
	$(MAKE) -C thirdparty/audiofile*
	$(MAKE) -C thirdparty/flac*
	$(MAKE) -C thirdparty/libtheora*
#	$(MAKE) -C thirdparty/ilmbase*
#	$(MAKE) -C thirdparty/ilmbase* install
#	$(MAKE) -C thirdparty/openexr*
#	$(MAKE) -C thirdparty/openexr* install
#	$(MAKE) -C thirdparty/fftw*
	MAKE='make -j1' make -j1 -C thirdparty/speech_tools
	MAKE='make -j1' make -j1 -C thirdparty/festival
endif
	@ for i in $(DIRS) ; \
	do \
		 $(MAKE) -C $$i ; \
	done

$(OBJDIR)/soundtest: $(OBJDIR)/soundtest.o
	$(CC) -o $(OBJDIR)/soundtest $(OBJDIR)/soundtest.o -lm

clean:
ifeq ($(STATIC_LIBRARIES), y)
	$(MAKE) -f build/Makefile.sndfile clean
	$(MAKE) -f build/Makefile.gif clean
	$(MAKE) -f build/Makefile.exr clean
	$(MAKE) -f build/Makefile.esound clean
#	$(MAKE) -f build/Makefile.freetype clean
	$(MAKE) -f build/Makefile.tiff clean
	$(MAKE) -f build/Makefile.toolame clean
	$(MAKE) -f build/Makefile.uuid clean
ifeq ($(HAVE_FIREWIRE), y)
	$(MAKE) -i -C thirdparty/libraw1394* clean
	$(MAKE) -i -C thirdparty/libiec61883* clean
	$(MAKE) -i -C thirdparty/libavc1394* clean
endif
	$(MAKE) -i -C thirdparty/audiofile* clean
	$(MAKE) -i -C thirdparty/flac* clean
	$(MAKE) -i -C thirdparty/libtheora* clean
#	$(MAKE) -i -C thirdparty/ilmbase* clean
#	$(MAKE) -i -C thirdparty/openexr* clean
#	$(MAKE) -i -C thirdparty/fftw* clean
	MAKE='make -j1' make -C thirdparty/speech_tools clean
	MAKE='make -j1' make -C thirdparty/festival clean
endif
	rm -rf bin/*
	make -C doc clean
	MAKE='make -j1' make -j1 -i -C thirdparty/mjpegtools* clean
	$(MAKE) -i -C quicktime clean
	find \( -name '*.lo' \
		-o -name '*.o' \
		-o -name '*.la' \
		-o -name '*.a' \
		-o -name '*.plugin' \
		-o -name '*.so' \) -exec rm -f {} \; -prune
	find \( -name $(OBJDIR) \) -exec rm -rf {} \; -prune
#	find \( -name .deps \) -exec rm -rf {} \; -prune
	find \( -name .libs \) -exec rm -rf {} \; -prune
	rm -rf thirdparty/lib
	rm -rf thirdparty/bin
	rm -rf thirdparty/include
	rm -rf thirdparty/share

wc:
	cat *.C *.h | wc
	@ for i in $(DIRS) ; \
	do \
		 $(MAKE) -C $$i wc; \
	done

bin/mpeg2enc.plugin:
	/bin/cp -a $(MJPEGDIR)/mpeg2enc/mpeg2enc $@

bin/mplex:
	/bin/cp -a $(MJPEGDIR)/mplex/mplex $@

install:	bin/mpeg2enc.plugin bin/mplex
	$(MAKE) -C plugins install
	DST=../bin $(MAKE) -C libzmpeg3 install
	$(MAKE) -C po install
	$(MAKE) -C doc install
	cp COPYING README bin
ifeq ($(STATIC_LIBRARIES), y)
	cp thirdparty/festival/src/main/festival bin
	cp -a thirdparty/festival/lib bin/
endif
	cp -a models bin
	cd bin && find -name '.svn' -exec rm -r {} \; -prune
	rm -f bin/cutads
	cp -a cinelerra/$(OBJDIR)/cutads bin/.
	rm -f bin/new_db
	$(MAKE) -C db/utils new_db
	cp -a db/utils/new_db bin/.
	@if [ ! -f "/cinelerra/media.db" ]; then \
		echo "need to run:"; \
		echo "	mkdir /cinelerra"; \
		echo "	new_db /cinelerra/media.db"; \
	fi
COMPILE = $(GCC) -c $(CFLAGS) $? -o $*.o

$(OBJDIR)/soundtest.o: soundtest.c
	$(COMPILE)


